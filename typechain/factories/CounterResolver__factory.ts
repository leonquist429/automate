/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CounterResolver,
  CounterResolverInterface,
} from "../CounterResolver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_counter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "COUNTER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161054c38038061054c83398181016040528101906100329190610084565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050506100f6565b60008151905061007e816100df565b92915050565b60006020828403121561009657600080fd5b60006100a48482850161006f565b91505092915050565b60006100b8826100bf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100e8816100ad565b81146100f357600080fd5b50565b60805160601c61043361011960003960008181607a015260a401526104336000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806399b705791461003b578063cf5303cf14610059575b600080fd5b610043610078565b6040516100509190610275565b60405180910390f35b61006161009c565b60405161006f929190610290565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631c15ff776040518163ffffffff1660e01b815260040160206040518083038186803b15801561010857600080fd5b505afa15801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906101e6565b905060b4814261015091906102f7565b1192506346d4adf260e01b606460405160240161016d91906102c0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509150509091565b6000815190506101e0816103e6565b92915050565b6000602082840312156101f857600080fd5b6000610206848285016101d1565b91505092915050565b6102188161032b565b82525050565b6102278161033d565b82525050565b6000610238826102db565b61024281856102e6565b9350610252818560208601610373565b61025b816103d5565b840191505092915050565b61026f81610369565b82525050565b600060208201905061028a600083018461020f565b92915050565b60006040820190506102a5600083018561021e565b81810360208301526102b7818461022d565b90509392505050565b60006020820190506102d56000830184610266565b92915050565b600081519050919050565b600082825260208201905092915050565b600061030282610369565b915061030d83610369565b9250828210156103205761031f6103a6565b5b828203905092915050565b600061033682610349565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610391578082015181840152602081019050610376565b838111156103a0576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b6103ef81610369565b81146103fa57600080fd5b5056fea264697066735822122024f4df6c633a9f817f2b39c72e8ffe00bc8a28a64c9c95ce924a372b48663c5564736f6c63430008000033";

export class CounterResolver__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _counter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CounterResolver> {
    return super.deploy(_counter, overrides || {}) as Promise<CounterResolver>;
  }
  getDeployTransaction(
    _counter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_counter, overrides || {});
  }
  attach(address: string): CounterResolver {
    return super.attach(address) as CounterResolver;
  }
  connect(signer: Signer): CounterResolver__factory {
    return super.connect(signer) as CounterResolver__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterResolverInterface {
    return new utils.Interface(_abi) as CounterResolverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CounterResolver {
    return new Contract(address, _abi, signerOrProvider) as CounterResolver;
  }
}
